{"version":3,"sources":["components/Config.js","_actions/user_action.js","_actions/types.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/views/commons/GridCards.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetail/Sections/MovieInfo.js","components/views/MovieDetail/Sections/Favorite.js","components/views/MovieDetail/MovieDetail.js","components/views/FavoritePage/FavoritePage.js","components/App.js","serviceWorker.js","_reducer/index.js","_reducer/user_reducer.js","index.js"],"names":["API_URL","API_KEY","IMAGE_BASE_URL","auth","type","payload","axios","get","then","response","data","ComposedClass","reload","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","MainImage","style","background","image","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","title","fontSize","text","GridCards","landingPage","lg","md","xs","href","movieId","src","alt","movieName","characterName","LandingPage","useState","Movies","setMovies","MainMovieImage","setMainMovieImage","CurrentPage","setCurrentPage","endpoint","fetchMovies","fetch","json","results","page","margin","backdrop_path","original_title","overview","gutter","map","movie","index","Fragment","key","poster_path","id","display","justifyContent","onClick","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","Item","prefix","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","Menu","SubMenu","ItemGroup","LeftMenu","mode","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","flexDirection","alignItems","MovieInfo","bordered","release_date","revenue","runtime","vote_average","vote_count","popularity","React","memo","userFrom","movieInfo","movieTitle","moviePost","movieRunTime","number","toggle","Favorite","setFavorite","variables","Axios","favoriteNumber","favorited","Movie","setMovie","Casts","setCasts","ActorToggle","setActorToggle","match","params","endpointCrew","endpointInfo","cast","profile_path","FavoritePage","Favorites","setFavorites","fetchFavoredMovie","favorites","renderCards","favorite","content","onClickDelete","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","MovieDetail","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.319fbd45.chunk.js","sourcesContent":["//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\nexport const API_URL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '2fa3474d44c1c79ac81c4a898cef8b94';\n\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n","import axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER, LOGOUT_USER } from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit) {\n  const request = axios\n    .post(`${USER_SERVER}/register`, dataToSubmit)\n    .then(response => response.data);\n\n  return {\n    type: REGISTER_USER,\n    payload: request,\n  };\n}\n\nexport function loginUser(dataToSubmit) {\n  const request = axios\n    .post(`${USER_SERVER}/login`, dataToSubmit)\n    .then(response => response.data);\n\n  return {\n    type: LOGIN_USER,\n    payload: request,\n  };\n}\n\nexport function auth() {\n  const request = axios\n    .get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n  return {\n    type: AUTH_USER,\n    payload: request,\n  };\n}\n\nexport function logoutUser() {\n  const request = axios\n    .get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n  return {\n    type: LOGOUT_USER,\n    payload: request,\n  };\n}\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_action';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport default function(ComposedClass, reload, adminRoute = null) {\n  function AuthenticationCheck(props) {\n    let user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      dispatch(auth()).then(response => {\n        if (!response.payload.isAuth) {\n          if (reload) {\n            props.history.push('/login');\n          }\n        } else {\n          if (adminRoute && !response.payload.isAdmin) {\n            props.history.push('/');\n          } else {\n            if (reload === false) {\n              props.history.push('/');\n            }\n          }\n        }\n      });\n    }, []);\n\n    return <ComposedClass {...props} user={user} />;\n  }\n  return AuthenticationCheck;\n}\n","import React from 'react';\n\nfunction MainImage(props) {\n  return (\n    <div\n      style={{\n        background: `linear-gradient(to bottom, rgba(0,0,0,0)\n    39%, rgba(0,0,0,0)\n    41%, rgba(0,0,0,0.65)\n    100%),\n    url('${props.image}'), #1c1c1c`,\n        height: '500px',\n        backgroundSize: '100%, cover',\n        backgroundPosition: 'center, center',\n        width: '100%',\n        position: 'relative',\n      }}\n    >\n      <div\n        style={{\n          position: 'absolute',\n          maxWidth: '500px',\n          bottom: '2rem',\n          marginLeft: '2rem',\n        }}\n      >\n        <h2 style={{ color: 'white' }}>\n          {props.title}\n          <p style={{ color: 'white', fontSize: '1rem' }}>{props.text}</p>\n        </h2>\n      </div>\n    </div>\n  );\n}\n\nexport default MainImage;\n","import React from 'react';\nimport { Col } from 'antd';\n\nfunction GridCards(props) {\n  if (props.landingPage) {\n    return (\n      <Col lg={6} md={8} xs={24}>\n        <div style={{ position: 'relative' }}>\n          <a href={`/movie/${props.movieId}`}>\n            <img\n              style={{ width: '100%', height: '320px' }}\n              src={props.image}\n              alt={props.movieName}\n            />\n          </a>\n        </div>\n      </Col>\n    );\n  } else {\n    return (\n      <Col lg={6} md={8} xs={24}>\n        <div style={{ position: 'relative' }}>\n          <img\n            style={{ width: '100%', height: '320px' }}\n            src={props.image}\n            alt={props.characterName}\n          />\n        </div>\n      </Col>\n    );\n  }\n}\n\nexport default GridCards;\n","import React, { useEffect, useState } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\nimport MainImage from './Sections/MainImage';\nimport GridCards from '../commons/GridCards';\nimport { Row } from 'antd';\n\nfunction LandingPage() {\n  const [Movies, setMovies] = useState([]);\n  const [MainMovieImage, setMainMovieImage] = useState(null);\n  const [CurrentPage, setCurrentPage] = useState(0);\n\n  useEffect(() => {\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    fetchMovies(endpoint);\n  }, []);\n\n  const fetchMovies = endpoint => {\n    fetch(endpoint)\n      .then(response => response.json())\n      .then(response => {\n        // console.log(response);\n        setMovies([...Movies, ...response.results]);\n        setMainMovieImage(response.results[0]);\n        setCurrentPage(response.page);\n      });\n  };\n\n  const loadMoreItems = () => {\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${CurrentPage +\n      1}`;\n    fetchMovies(endpoint);\n  };\n\n  return (\n    <div style={{ width: '100%', margin: '0' }}>\n      {/* Main Image */}\n      {MainMovieImage && (\n        <MainImage\n          image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`}\n          title={MainMovieImage.original_title}\n          text={MainMovieImage.overview}\n        />\n      )}\n\n      <div style={{ width: '85%', margin: '1rem auto' }}>\n        <h2>Movies by latest</h2>\n        <hr />\n        {/* Movie Grid Cards */}\n        <Row gutter={[16, 16]}>\n          {Movies &&\n            Movies.map((movie, index) => (\n              <React.Fragment key={index}>\n                <GridCards\n                  landingPage\n                  image={\n                    movie.poster_path\n                      ? `${IMAGE_BASE_URL}w500${movie.poster_path}`\n                      : null\n                  }\n                  movieId={movie.id}\n                  movieName={movie.original_title}\n                />\n              </React.Fragment>\n            ))}\n        </Row>\n      </div>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <button onClick={loadMoreItems}>Load More</button>\n      </div>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { loginUser } from '../../../_actions/user_action';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from 'react-redux';\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem('rememberMe') ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('');\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem('rememberMe')\n    ? localStorage.getItem('rememberMe')\n    : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push('/');\n              } else {\n                setFormErrorMessage('Check out your Account or Password again');\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again');\n              setTimeout(() => {\n                setFormErrorMessage('');\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={\n                    <Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                  }\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n                  }\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label>\n                  <p\n                    style={{\n                      color: '#ff0000bf',\n                      fontSize: '0.7rem',\n                      border: '1px solid',\n                      padding: '1rem',\n                      borderRadius: '10px',\n                    }}\n                  >\n                    {formErrorMessage}\n                  </p>\n                </label>\n              )}\n\n              <Form.Item>\n                <Checkbox\n                  id=\"rememberMe\"\n                  onChange={handleRememberMe}\n                  checked={rememberMe}\n                >\n                  Remember me\n                </Checkbox>\n                <a\n                  className=\"login-form-forgot\"\n                  href=\"/reset_user\"\n                  style={{ float: 'right' }}\n                >\n                  forgot password\n                </a>\n                <div>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{ minWidth: '100%' }}\n                    disabled={isSubmitting}\n                    onSubmit={handleSubmit}\n                  >\n                    Log in\n                  </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default withRouter(LoginPage);\n","import React from 'react';\nimport moment from 'moment';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from '../../../_actions/user_action';\nimport { useDispatch } from 'react-redux';\n\nimport { Form, Input, Button } from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required('Name is required'),\n        lastName: Yup.string().required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push('/login');\n            } else {\n              alert(response.payload.err.errmsg);\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form\n              style={{ minWidth: '375px' }}\n              {...formItemLayout}\n              onSubmit={handleSubmit}\n            >\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Email\"\n                hasFeedback\n                validateStatus={\n                  errors.email && touched.email ? 'error' : 'success'\n                }\n              >\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Password\"\n                hasFeedback\n                validateStatus={\n                  errors.password && touched.password ? 'error' : 'success'\n                }\n              >\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button\n                  onClick={handleSubmit}\n                  type=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default RegisterPage;\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"mail\">\n        <a href=\"/\">Home</a>\n      </Menu.Item>\n      <Menu.Item key=\"favorite\">\n        <a href=\"/favorite\">Favorite</a>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default LeftMenu;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false);\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  return (\n    <nav\n      className=\"menu\"\n      style={{ position: 'fixed', zIndex: 5, width: '100%' }}\n    >\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { Icon } from 'antd';\n\nfunction Footer() {\n  return (\n    <div\n      style={{\n        height: '80px',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '1rem',\n      }}\n    >\n      <p>\n        {' '}\n        Happy Coding <Icon type=\"smile\" />\n      </p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Descriptions, Badge } from 'antd';\n\nfunction MovieInfo({ movie }) {\n  return (\n    <Descriptions title=\"Movie Info\" bordered>\n      <Descriptions.Item label=\"Title\">\n        {movie.original_title}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"release_date\">\n        {movie.release_date}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"revenue\">{movie.revenue}</Descriptions.Item>\n      <Descriptions.Item label=\"runtime\">{movie.runtime}</Descriptions.Item>\n      <Descriptions.Item label=\"vote_average\" span={2}>\n        {movie.vote_average}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"vote_count\">\n        {movie.vote_count}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"status\">{movie.status}</Descriptions.Item>\n      <Descriptions.Item label=\"popularity\">\n        {movie.popularity}\n      </Descriptions.Item>\n    </Descriptions>\n  );\n}\n\nexport default MovieInfo;\n","import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { Button } from 'antd';\n\nfunction Favorite(props) {\n  const { userFrom, movieId, movieInfo } = props;\n  const movieTitle = movieInfo.title;\n  const moviePost = movieInfo.backdrop_path;\n  const movieRunTime = movieInfo.runtime;\n\n  const [Favorite, setFavorite] = useState({\n    number: 0,\n    toggle: false,\n  });\n\n  const variables = {\n    userFrom,\n    movieId,\n    movieTitle,\n    moviePost,\n    movieRunTime,\n  };\n\n  useEffect(() => {\n    Axios.post('/api/favorite/favoriteNumber', variables).then(response => {\n      // setFavoriteNumber(response.data.favoriteNumber);\n      setFavorite({\n        ...Favorite,\n        number: response.data.favoriteNumber,\n      });\n      if (response.data.success) {\n      } else {\n        alert('숫자 정보를 가져오는데 실패 했습니다.');\n      }\n    });\n\n    Axios.post('/api/favorite/favorited', variables).then(response => {\n      if (response.data.success) {\n        // setFavorited(response.data.favorited);\n        setFavorite({\n          ...Favorite,\n          toggle: response.data.favorited,\n        });\n      } else {\n        alert('정보를 가져오는데 실패 했습니다.');\n      }\n    });\n  }, []);\n\n  const onClickFavorite = () => {\n    if (Favorite.toggle) {\n      Axios.post('/api/favorite/removeFromFavorite', variables).then(\n        response => {\n          if (response.data.success) {\n            setFavorite({\n              ...Favorite,\n              ...Favorite.number,\n              number: Favorite.number - 1,\n              toggle: !Favorite.toggle,\n            });\n          } else {\n            alert('Favorite 리스트에서 지우는 걸 실패했습니다.');\n          }\n        },\n      );\n    } else {\n      Axios.post('/api/favorite/addToFavorite', variables).then(response => {\n        if (response.data.success) {\n          setFavorite({\n            ...Favorite,\n            ...Favorite.number,\n            number: Favorite.number + 1,\n            toggle: !Favorite.toggle,\n          });\n        } else {\n          alert('Favorite 리스트에서 추가하는 걸 실패했습니다.');\n        }\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Button onClick={onClickFavorite}>\n        {Favorite.toggle ? 'Not Favorite' : 'Add to Favorite'} {Favorite.number}\n      </Button>\n    </div>\n  );\n}\n\nexport default React.memo(Favorite);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';\nimport MainImage from '../LandingPage/Sections/MainImage';\nimport MovieInfo from './Sections/MovieInfo';\nimport { Row } from 'antd';\nimport GridCards from '../commons/GridCards';\nimport Favorite from './Sections/Favorite';\nimport { Button } from 'antd';\n\nfunction MovieDetail(props) {\n  const [Movie, setMovie] = useState([]);\n  const [Casts, setCasts] = useState([]);\n  const [ActorToggle, setActorToggle] = useState(false);\n\n  let movieId = props.match.params.movieId;\n\n  useEffect(() => {\n    let endpointCrew = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n\n    let endpointInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n\n    fetch(endpointInfo)\n      .then(response => response.json())\n      .then(response => {\n        setMovie(response);\n      });\n\n    fetch(endpointCrew)\n      .then(response => response.json())\n      .then(response => {\n        setCasts(response.cast);\n      });\n  }, []);\n\n  const toggleActorView = () => {\n    setActorToggle(!ActorToggle);\n  };\n\n  return (\n    <div>\n      {/* Header */}\n      <MainImage\n        image={`${IMAGE_BASE_URL}w1280${Movie.backdrop_path}`}\n        title={Movie.original_title}\n        text={Movie.overview}\n      />\n      {/* Body */}\n      <div style={{ width: '85%', margin: '1rem auto' }}>\n        <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n          <Favorite\n            userFrom={localStorage.getItem('userId')}\n            movieId={movieId}\n            movieInfo={Movie}\n          />\n        </div>\n\n        {/* Movie Info */}\n        <MovieInfo movie={Movie} />\n\n        <br />\n        {/* Actors Grid */}\n        <div\n          style={{ display: 'flex', justifyContent: 'center', margin: '2rem' }}\n        >\n          <Button onClick={toggleActorView}>Toggle Actor View</Button>\n        </div>\n\n        {/* Actors Grid */}\n\n        {ActorToggle && (\n          <Row gutter={[16, 16]}>\n            {Casts &&\n              Casts.map((cast, index) => (\n                <React.Fragment key={index}>\n                  <GridCards\n                    image={\n                      cast.profile_path\n                        ? `${IMAGE_BASE_URL}w500${cast.profile_path}`\n                        : null\n                    }\n                    characterName={cast.name}\n                  />\n                </React.Fragment>\n              ))}\n          </Row>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(MovieDetail);\n","import React, { useEffect, useState } from 'react';\nimport './favorite.css';\nimport Axios from 'axios';\nimport { Button, Popover } from 'antd';\nimport { IMAGE_BASE_URL } from '../../Config';\n\nfunction FavoritePage() {\n  const [Favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    fetchFavoredMovie();\n  }, []);\n\n  const fetchFavoredMovie = () => {\n    Axios.post('/api/favorite/getFavoredMovie', {\n      userFrom: localStorage.getItem('userId'),\n    }).then(response => {\n      if (response.data.success) {\n        setFavorites(response.data.favorites);\n      } else {\n        alert('영화 정보를 가져오지 못했습니다.');\n      }\n    });\n  };\n\n  const onClickDelete = (movieId, userFrom) => {\n    const variables = {\n      movieId,\n      userFrom,\n    };\n\n    Axios.post('/api/favorite/removeFromFavorite', variables).then(response => {\n      if (response.data.success) {\n        fetchFavoredMovie();\n      } else {\n        alert(`리스트 삭제에 오류가 발생하였습니다.`);\n      }\n    });\n  };\n\n  const renderCards = Favorites.map((favorite, index) => {\n    const content = (\n      <div>\n        {favorite.moviePost ? (\n          <img src={`${IMAGE_BASE_URL}w500${favorite.moviePost}`} />\n        ) : (\n          'no image'\n        )}\n      </div>\n    );\n    return (\n      <tr key={index}>\n        <Popover content={content} title={`${favorite.movieTitle}`}>\n          <td>{favorite.movieTitle}</td>\n        </Popover>\n        <td>{favorite.movieRunTime} mins</td>\n        <td>\n          <Button\n            onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}\n          >\n            Remove\n          </Button>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <div style={{ width: '85%', margin: '3rem auto' }}>\n      <h2>Favorite Movies By Me</h2>\n      <hr />\n      <table>\n        <thead>\n          <tr>\n            <th>Movie Title</th>\n            <th>Movie RunTime</th>\n            <td>Remove from favorites</td>\n          </tr>\n        </thead>\n        <tbody>{renderCards}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default FavoritePage;\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Auth from '../hoc/auth';\n// pages for this product\nimport LandingPage from './views/LandingPage/LandingPage.js';\nimport LoginPage from './views/LoginPage/LoginPage.js';\nimport RegisterPage from './views/RegisterPage/RegisterPage.js';\nimport NavBar from './views/NavBar/NavBar';\nimport Footer from './views/Footer/Footer';\nimport MovieDetail from './views/MovieDetail/MovieDetail';\nimport FavoritePage from './views/FavoritePage/FavoritePage';\n\nfunction App() {\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route path=\"/movie/:movieId\" component={Auth(MovieDetail, null)} />\n          <Route path=\"/favorite\" component={Auth(FavoritePage, null)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n  user,\n});\n\nexport default rootReducer;\n","import {\n  LOGIN_USER,\n  REGISTER_USER,\n  AUTH_USER,\n  LOGOUT_USER,\n} from '../_actions/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case REGISTER_USER:\n      return { ...state, register: action.payload };\n    case LOGIN_USER:\n      return { ...state, loginSucces: action.payload };\n    case AUTH_USER:\n      return { ...state, userData: action.payload };\n    case LOGOUT_USER:\n      return { ...state };\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Reducer from './_reducer';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(\n  promiseMiddleware,\n  ReduxThunk,\n)(createStore);\n\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      Reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__(),\n    )}\n  >\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}